import spark.implicits._

Date	
Time	
Location	
Operator	
// Flight #	
// Route	
AC Type	
Registration	
//cn/ln	
Aboard	
Aboard Passangers	
Aboard Crew	
Fatalities	
Fatalities Passangers	
Fatalities Crew	
Ground	
Summary


case class Incidents( 
    date:String, 
    time:String,
    location:String, 
    operator:String, 
    ACtype:String, 
    aboard:String, 
    aboard_passangers:String, 
    aboard_crew:String, 
    fatalities:StringType,
    fatalities_passangers:StringType,S
    fatalities_crew:StringType,
    summary:String)

val sfpdDF = spark.read.format("csv").schema(sfpdSchema).load("/termdata/airplane/ACaF.csv").toDF("date", "time", "location", "operator", "ACtype", "aboard", "aboard_passangers", "aboard_crew", "fatalities", "fatalities_passangers", "fatalities_crew", "summary")

sfpdDS.printSchema()
sfpdDS.createTempView("sfpd")


import spark.implicits._
import org.apache.spark.sql.types._

val airplaneSchema = new StructType(Array(
    new StructField("date", StringType, true),
    new StructField("time", StringType, true),
    new StructField("location", StringType, true),
    new StructField("operator", StringType, true),
    new StructField("ACtype", StringType, true),
    new StructField("aboard", StringType, true),
    new StructField("aboard_passangers", StringType, true),
    new StructField("aboard_crew", StringType, true),
    new StructField("fatalities", StringType, true),
    new StructField("fatalities_passangers", StringType, true),
    new StructField("fatalities_crew", StringType, true),
    new StructField("summary", StringType, true)
    ))
    
val airplaneDF = spark.read.format("csv").schema(airplaneSchema).load("/termdata/airplane/ACaF.csv").toDF("date", "time", "location", "operator", "ACtype", "aboard", "aboard_passangers", "aboard_crew", "fatalities", "fatalities_passangers", "fatalities_crew", "summary")

case class Airplane( 
    date:String, 
    time:String,
    location:String, 
    operator:String, 
    ACtype:String, 
    aboard:String, 
    aboard_passangers:String, 
    aboard_crew:String, 
    fatalities:String,
    fatalities_passangers:String,
    fatalities_crew:String,
    summary:String)
    
val airplaneDS = airplaneDF.as[Airplane]
airplaneDS.printSchema()
airplaneDS.show()